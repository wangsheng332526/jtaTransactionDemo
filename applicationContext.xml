<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd   
	                    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd   
	                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd   
	                    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd   
	                    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
    <!-- 引入属性文件 -->
    <context:property-placeholder location="classpath*:/application.properties" />
    
    <!-- 对于没有被IOC容器管理的对象也可以使用依赖注入 -->
    <context:spring-configured /> 
 
    <!-- 注解bean及依赖注入 -->
    <context:component-scan base-package="com.test.jta" />
	
	
    <!-- mysql数据源1 -->
    <bean id="masterDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean"
        init-method="init" destroy-method="close">
        <description>master xa datasource</description>
        <property name="uniqueResourceName">
            <value>masterDataSource</value>
        </property>
        <property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" />
        <property name="xaProperties">
            <props>
                <prop key="user">test</prop>
                <prop key="password">gmys123456!@#</prop>
                <prop key="URL">jdbc:mysql://192.168.245.44:3306/sso</prop>
            </props>
        </property>     
        <property name="poolSize" value="10"/> 
    </bean>
 
    <!-- mysql数据源1 -->
    <bean id="slaveDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean"
        init-method="init" destroy-method="close">
        <description>slave xa datasource</description>
        <property name="uniqueResourceName">
            <value>slaveDataSource</value>
        </property>
        <property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" />
        <property name="xaProperties">
            <props>
                <prop key="user">sso</prop>
                <prop key="password">GMYSdb@sso</prop>
                <prop key="URL">jdbc:mysql://192.168.250.56:3306/sso</prop>
            </props>
        </property>     
        <property name="poolSize" value="10"/>
    </bean>
 
    <!-- atomikos事务管理器 -->
    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
        init-method="init" destroy-method="close">
        <description>UserTransactionManager</description>
        <property name="forceShutdown">
            <value>true</value>
        </property>
    </bean>
    <!-- atomikos用户事务实现 -->
    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
        <property name="transactionTimeout" value="300" />
    </bean>
 
    <!-- spring 事务管理器 -->
    <bean id="springTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <!--注入 atomikos事务管理器 -->
        <property name="transactionManager">
            <ref bean="atomikosTransactionManager" />
        </property>
        <!--注入 atomikos用户事务实现 -->
        <property name="userTransaction">
            <ref bean="atomikosUserTransaction" />
        </property>
    </bean>
 
    <!-- spring事务模板 -->
    <bean id="transactionTemplate"  class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager">
            <ref bean="springTransactionManager" />
        </property>
    </bean>  
 
    <!--jdbc模板  -->
    <bean id="masterJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg>
            <ref bean="masterDataSource" />
        </constructor-arg>
    </bean>
 
    <!--jdbc模板  -->
    <bean id="slaveJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg>
            <ref bean="slaveDataSource" />
        </constructor-arg>
    </bean>
 
     <!-- 开启Spring注解式事务 --> 
    <tx:annotation-driven transaction-manager="springTransactionManager"/>  
 
 
</beans>